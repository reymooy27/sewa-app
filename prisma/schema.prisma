// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  rent          Rent[]
}

model Rent {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  price      Int
  amount     Int?       @default(0)
  available  Boolean?   @default(true)
  userId     String?    @db.ObjectId
  user       User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category[] @relation(fields: [categoryId], references: [id])
  categoryId String[]   @db.ObjectId
}

model Category {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  rent   Rent[]   @relation(fields: [rentId], references: [id])
  rentId String[] @db.ObjectId
}
